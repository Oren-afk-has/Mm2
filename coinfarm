--Source
local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()

--Window
local Window = Fluent:CreateWindow({
    Title = "Bgsi Private Script",
    SubTitle = "By Oren",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = false,
    Theme = "Darker",
    MinimizeKey = Enum.KeyCode.LeftControl
})

--Tabs
local Tabs = {
    Home = Window:AddTab({ Title = "Home", Icon = "" }),
    Rifts = Window:AddTab({ Title = "Rifts", Icon = "" }),
}

--Credits
local Section = Tabs.Home:AddSection("Credits")
Section:AddParagraph({
    Title = "This Script Is A Work In Progess I Dunno If This Will Ever Be \nRealeased"
})

local Eggs = {
    "common-egg",
    "spotted-egg",
    "iceshard-egg",
    "spikey-egg",
    "magma-egg",
    "crystal-egg",
    "lunar-egg",
    "void-egg",
    "hell-egg",
    "nightmare-egg",
    "rainbow-egg",
    "throwback-egg",
    "event-3",
    "silly-egg"
}

local MultiDropdown = Tabs.Rifts:AddDropdown("MultiDropdown", {
    Title = "Auto Rift",
    Description = "Select Rifts You Would Like To Hatch",
    Values = Eggs,
    Multi = true,
    Default = {},
})

local Toggle = Tabs.Rifts:AddToggle("MyToggle", {
    Title = "AutoFarm Rifts", 
    Description = "Automatically finds and moves to selected rifts",
    Default = false,
    Callback = function(state)
        if state then
            local selectedEggs = MultiDropdown:GetActiveValues()
            
            -- Print selected rifts
            print("Selected Rifts:")
            for _, eggName in pairs(selectedEggs) do
                print("✅ " .. eggName)
            end
        else
            print("⏹ Stopped rift searching")
        end
    end 
})

--Config Saving
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)
InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)
